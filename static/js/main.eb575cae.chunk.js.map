{"version":3,"sources":["Attribution.js","Question.js","App.js","reportWebVitals.js","index.js"],"names":["Attribution","number","rootDir","ids","Array","from","keys","filterLevels","id_filters","forEach","x","y","push","filterFileNameMap","1","2","3","4","useState","value","setValue","fvNameDict","React","useEffect","mouseOverAttribution","mouseOutAttribution","a","d3","this","style","d","attribution","attribution_spec","w","h","attr","classed","selectAll","remove","append","data","slice","enter","parseInt","on","drawGrid","className","id","min","max","variant","onChange","changeEvent","target","Question","setAnswer","itemClick","svg","App","rootDirs","map","item","expRootDir","questionNum","length","reduce","acc","curr","totalInfo","setTotalInfo","defaultInfo","userInfo","setUserInfo","updateInfoToggle","prevState","includes","filter","updateUserInfo","key","event","download","content","fileName","contentType","document","createElement","file","Blob","type","href","URL","createObjectURL","click","Object","console","log","width","onClick","notOK","answers","JSON","stringify","alert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.eb575cae.chunk.js","sourcesContent":["import './Question.css';\r\nimport React, { useState } from 'react';\r\nimport * as d3 from 'd3';\r\nimport RangeSlider from 'react-bootstrap-range-slider';\r\nimport 'react-bootstrap';\r\n\r\nfunction Attribution({number,rootDir}) {\r\n  let ids = Array.from(Array(4).keys());\r\n  let filterLevels = Array.from(Array(4).keys());\r\n\r\n  let id_filters = []\r\n  ids.forEach(x => {filterLevels.forEach(y => {id_filters.push([x, y])})}); \r\n\r\n  let filterFileNameMap ={\r\n    1 : 'w28s28',\r\n    2 : 'w56s28',\r\n    3 : 'w112s28',\r\n    4 : 'w196s28',\r\n  }\r\n\r\n  const [value, setValue] = useState(1);\r\n\r\n  let fvNameDict = {\r\n    1: 'dataset-example3',\r\n    2: 'dataset-example4',\r\n    3 : 'basic_fv',\r\n    4 : 'dataset_fv'\r\n  }\r\n\r\n  function setResult(event){\r\n\r\n  }\r\n\r\n  React.useEffect(() => {\r\n\r\n\r\n    async function drawGrid() {\r\n      // TODO draw the map using d3\r\n\r\n      const attribution = d3\r\n      .selectAll(`#attribution_${number}`);\r\n      let attribution_spec = {\r\n        w : 90,\r\n        h: 80\r\n      }\r\n\r\n      function mouseOverAttribution(){\r\n        d3.select(this)\r\n        .style(\"fill\", // use square size image\r\n                (d)=>`url(#att_${number}_${d})`)\r\n      }\r\n\r\n      function mouseOutAttribution(){\r\n        d3.select(this)\r\n        .style(\"fill\", // use square size image\r\n                (d)=>`url(#filter_${number}_${d}_${value})`)\r\n      }\r\n\r\n      attribution\r\n        .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\r\n        .style(\"background-color\", \"transparent\")\r\n        .attr(\"viewBox\", `0 0 ${attribution_spec.w} ${attribution_spec.h}`)\r\n        .classed(\"svg-content\", true)\r\n        .selectAll('*').remove();\r\n\r\n      attribution\r\n        .append(\"defs\")\r\n        .selectAll(\"pattern\")\r\n        .data(ids.slice(0,2))\r\n        .enter()\r\n        .append('pattern')\r\n        .attr(\"id\", (d)=>`att_${number}_${d}`)\r\n        .attr(\"width\",\"100%\")\r\n        .attr('height',\"100%\")\r\n        .attr(\"patternContentUnits\", \"objectBoundingBox\")\r\n        .append(\"image\")\r\n        .attr(\"height\",\"1\") // value is ratio : \"image height /pattern height\"\r\n        .attr(\"width\",\"1\") // value is ratio : \"image widht /pattern width\"\r\n        .attr(\"xlink:href\", // use square size image\r\n            (d)=>`${rootDir}/attribution/dataset-example${d+3}.png`);\r\n      \r\n        attribution\r\n            .append(\"defs\")\r\n            .selectAll(\"pattern\")\r\n            .data(ids.slice(2,4))\r\n            .enter()\r\n            .append('pattern')\r\n            .attr(\"id\", (d)=>`att_${number}_${d}`)\r\n            .attr(\"width\",\"100%\")\r\n            .attr('height',\"100%\")\r\n            .attr(\"patternContentUnits\", \"objectBoundingBox\")\r\n            .append(\"image\")\r\n            .attr(\"height\",\"1\") // value is ratio : \"image height /pattern height\"\r\n            .attr(\"width\",\"1\") // value is ratio : \"image widht /pattern width\"\r\n            .attr(\"xlink:href\", // use square size image\r\n                (d)=>`${rootDir}/attribution/${fvNameDict[d+1]}.png`);\r\n        \r\n        attribution\r\n                .append(\"defs\")\r\n                .selectAll(\"pattern\")\r\n                .data(id_filters)\r\n                .enter()\r\n                .append('pattern')\r\n                .attr(\"id\", (d)=>`filter_${number}_${d[0]}_${d[1]+1}`)\r\n                .attr(\"width\",\"100%\")\r\n                .attr('height',\"100%\")\r\n                .attr(\"patternContentUnits\", \"objectBoundingBox\")\r\n                .append(\"image\")\r\n                .attr(\"height\",\"1\") // value is ratio : \"image height /pattern height\"\r\n                .attr(\"width\",\"1\") // value is ratio : \"image widht /pattern width\"\r\n                .attr(\"xlink:href\", // use square size image\r\n                    (d)=>`${rootDir}/attribution/${fvNameDict[d[0]+1]}_${filterFileNameMap[d[1]+1]}.png`);\r\n\r\n      attribution\r\n      .append('g')\r\n      .selectAll('rect')\r\n      .data(ids.slice(0,4))\r\n      .enter()\r\n      .append('rect')\r\n      .attr('id', (d) => `att_${number}_${d}`)\r\n      .attr('x', (d) => 7+parseInt(d/2)*40)\r\n      .attr('y', (d) => (d % 2) * 40)\r\n      .attr('width', 38)\r\n      .attr('height', 38)\r\n      .style(\"fill\", // use square size image\r\n                (d)=>`url(#filter_${number}_${d}_${value})`)\r\n      .on('mouseover',mouseOverAttribution)\r\n      .on('mouseout',mouseOutAttribution)\r\n\r\n    };\r\n    drawGrid();\r\n\r\n  },[value]);\r\n  return (\r\n        <div className=\"Target-FV\">\r\n          <svg id={'attribution_'+number} className='attribution'></svg>\r\n          <RangeSlider className='slider'\r\n                value={value}\r\n                min='1'\r\n                max='4'\r\n                variant='info'\r\n                onChange={changeEvent => {\r\n                    setValue(changeEvent.target.value)\r\n                    setResult(number)\r\n                }}\r\n            />\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default Attribution;\r\n","import './Question.css';\r\nimport React from 'react';\r\nimport * as d3 from 'd3';\r\nimport 'react-bootstrap';\r\nimport Attribution from './Attribution.js';\r\n\r\nfunction Question({number,setAnswer,rootDir}) {\r\n  let ids = Array.from(Array(9).keys());\r\n\r\n  React.useEffect(() => {\r\n\r\n\r\n    async function drawGrid() {\r\n      // TODO draw the map using d3\r\n      const svg = d3\r\n      .selectAll(`#Options_${number}`);\r\n      let w = 90;\r\n      let h = 90;\r\n\r\n      function itemClick(){\r\n        d3\r\n          .select(this)\r\n          .classed('clicked',!d3.select(this).classed('clicked'))\r\n          \r\n        setAnswer(number, d3.select(this).data()[0]+1)\r\n        \r\n      }  \r\n\r\n      svg\r\n        .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\r\n        .style(\"background-color\", \"transparent\")\r\n        .attr(\"viewBox\", `0 0 ${w} ${h}`)\r\n        .classed(\"svg-content\", true)\r\n        .selectAll('*').remove();\r\n\r\n        svg.append(\"defs\")\r\n        .selectAll(\"pattern\")\r\n        .data(ids)\r\n        .enter()\r\n        .append('pattern')\r\n        .attr(\"id\", (d)=>`img_${number}_${d}`)\r\n        .attr(\"width\",\"100%\")\r\n        .attr('height',\"100%\")\r\n        .attr(\"patternContentUnits\", \"objectBoundingBox\")\r\n        .append(\"image\")\r\n        .attr(\"height\",\"1\") // value is ratio : \"image height /pattern height\"\r\n        .attr(\"width\",\"1\") // value is ratio : \"image widht /pattern width\"\r\n        .attr(\"xlink:href\", // use square size image\r\n            (d)=>`${rootDir}/options/option${d+1}.png`);\r\n\r\n      svg.append('g')\r\n      .selectAll('rect')\r\n      .data(ids)\r\n      .enter()\r\n      .append('rect')\r\n      .attr('id', (d) => `rect_${number}_${d}`)\r\n      .attr('x', (d) => parseInt(d/3)*30+1)\r\n      .attr('y', (d) => (d % 3) * 30+1)\r\n      .attr('width', 28)\r\n      .attr('height', 28)\r\n      .style(\"fill\", // use square size image\r\n                (d)=>`url(#img_${number}_${d})`)\r\n      .on('click', itemClick)\r\n    };\r\n    drawGrid();\r\n\r\n  },[]);\r\n  return (\r\n    <div className=\"Question\">\r\n      <div className='Question-Title'>\r\n        <text className='Question-Text'>Question {number}</text>\r\n      </div>\r\n      <div className='Container'>\r\n      <Attribution number={number} rootDir={rootDir}></Attribution>\r\n        <div className=\"Option-box\">\r\n          <svg id={'Options_'+number} className='Options'></svg>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Question;\r\n","import './App.css';\nimport Question from './Question.js';\nimport React, { useState } from 'react';\n\nfunction App() {\n\n  let nueron_list = [291, 356, 660, 906, 908, 1526, 1591, 1943, 1994, 2031]\n\n  let expRootDir = 'full_spec11-final/'\n  let targetTestDir = '/Madry'\n  let rootDirs = nueron_list.map(item => {\n    return expRootDir+'nueron_' + (item) + targetTestDir;\n  })\n\n  let questionNum = rootDirs.length\n  const [totalInfo, setTotalInfo] = useState(\n    Array.from(Array(questionNum).keys()).reduce((acc, curr) => (acc[curr + 1] = [], acc), {})\n  )\n\n  let defaultInfo = {\n    'name': '',\n    'age': '',\n    'gender': '',\n    'major': '',\n    'backgrounds': ''\n  }\n\n  const [userInfo, setUserInfo] = useState(defaultInfo)\n\n  function updateInfoToggle(number, data) {\n    setTotalInfo(prevState => ({\n      ...prevState,\n      [number]: prevState[number].includes(data) ? prevState[number].filter(d => d !== data) : [...prevState[number], data]\n    })\n    );\n  }\n\n  function updateUserInfo(key, event) {\n    setUserInfo(prevState => ({\n      ...prevState,\n      [key]: event.target.value\n    }))\n\n  }\n\n  function download(content, fileName, contentType) {\n    const a = document.createElement(\"a\");\n    const file = new Blob([content], { type: contentType });\n    a.href = URL.createObjectURL(file);\n    a.download = fileName;\n    a.click();\n  }\n\n  function getProblemSpec(){\n\n    let problemSpec = {}\n    rootDirs.forEach((e,idx)=>{problemSpec['Q'+(idx+1)]=e})\n    download(JSON.stringify(problemSpec), \"experiment3_problem_spec.json\", \"text/plain\");\n  }\n\n  function submit() {\n    let notOK = [] // totalInfo update 할때 notOK 계산해 놓는게 나으려나\n\n    Object.keys(totalInfo).forEach(function (item) {\n      if (totalInfo[item].length !== 3) {\n        notOK.push(item)\n      }\n    })\n\n    if (notOK.length == 0) {\n      let answers = {...userInfo, ...totalInfo}\n      download(JSON.stringify(answers), \"Experiment3_\" + userInfo[\"name\"] + \".json\", \"text/plain\");\n    }\n\n    return alert(\n      JSON.stringify(userInfo) + '\\n'\n      + `${notOK.length > 0 ? 'pick only 3 options: ' + notOK : 'All Done!!!!'}`\n      + '\\n' + JSON.stringify(totalInfo)\n    )\n  }\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>\n          Interpretability Test (Experiment 3)\n        </p>\n      </header>\n\n      <div className='userInfoForm'>\n        <div className='Form-above'>\n          <div className='Form-Left'>\n            {Object.keys(defaultInfo).slice(0, 2).map(key => {\n              console.log(key)\n              return (<div className='Input-Row'>\n                <text style={{ width: '60px' }}> {key} </text>\n                <input\n                  type=\"text\"\n                  value={userInfo[key]}\n                  onChange={event => updateUserInfo(key, event)}\n                />\n              </div>);\n            })}\n\n          </div>\n\n          <div className='Form-Left'>\n            {Object.keys(defaultInfo).slice(2, 4).map(key => {\n              console.log(key)\n              return (<div className='Input-Row'>\n                <text style={{ width: '60px' }}> {key} </text>\n                <input\n                  type=\"text\"\n                  value={userInfo[key]}\n                  onChange={event => updateUserInfo(key, event)}\n                />\n              </div>);\n            })}\n\n          </div>\n\n        </div>\n\n        <div className='Input-full-Row'>\n          <text style={{ width: '100px' }}> {Object.keys(userInfo).slice(-1)[0]} </text>\n          <textarea\n            type=\"text\"\n            value={userInfo[Object.keys(userInfo).slice(-1)[0]]}\n            onChange={event => updateUserInfo(Object.keys(userInfo).slice(-1)[0], event)}\n          />\n        </div>\n      </div>\n\n      {Array.from(Array(questionNum).keys()).map(item => {\n        return (<div>\n          <Question number={item + 1} setAnswer={updateInfoToggle} rootDir={rootDirs[item]}></Question>\n        </div>);\n      })}\n\n      <button onClick={submit}>Submit</button>\n      {/* <button onClick={getProblemSpec}>download problem Spec</button> */}\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}